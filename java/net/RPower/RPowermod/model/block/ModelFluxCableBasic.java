// Date: 21/08/2014 21:03:22
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX






package net.RPower.RPowermod.model.block;

import net.RPower.RPowermod.machines.power.cable.TileEntityFluxCable;
import net.RPower.RPowermod.renderers.block.TileEntityFluxCableRenderer;
import net.minecraft.client.model.*;
import net.minecraft.entity.Entity;
import net.minecraft.tileentity.TileEntity;

public class ModelFluxCableBasic extends ModelBase
{
	//fields
	ModelRenderer fFaceR;
	ModelRenderer fFaceU;
	ModelRenderer fFaceD;
	ModelRenderer fFaceL;
	ModelRenderer fcoreL;
	ModelRenderer fcoreR;
	ModelRenderer lFaceB;
	ModelRenderer lFaceU;
	ModelRenderer lFaceD;
	ModelRenderer lFaceF;
	ModelRenderer lcoreL;
	ModelRenderer lcoreR;
	ModelRenderer rFaceB;
	ModelRenderer rFaceU;
	ModelRenderer rFaceD;
	ModelRenderer rFaceF;
	ModelRenderer rcoreL;
	ModelRenderer rcoreR;
	ModelRenderer coreR;
	ModelRenderer coreF;
	ModelRenderer coreL;
	ModelRenderer coreD;
	ModelRenderer coreB;
	ModelRenderer coreU;
	ModelRenderer dFaceB;
	ModelRenderer dFaceL;
	ModelRenderer dFaceR;
	ModelRenderer dFaceF;
	ModelRenderer dcoreL;
	ModelRenderer dcoreR;
	ModelRenderer uFaceB;
	ModelRenderer uFaceL;
	ModelRenderer uFaceR;
	ModelRenderer uFaceF;
	ModelRenderer ucoreL;
	ModelRenderer ucoreR;
	ModelRenderer bFaceR;
	ModelRenderer bFaceU;
	ModelRenderer bFaceD;
	ModelRenderer bFaceL;
	ModelRenderer bcoreL;
	ModelRenderer bcoreR;

	public ModelFluxCableBasic()
	{
		textureWidth = 16;
		textureHeight = 16;

		fFaceR = new ModelRenderer(this, 0, 0);
		fFaceR.addBox(0F, 0F, 0F, 6, 3, 0);
		fFaceR.setRotationPoint(-2F, 16F, -8F);
		fFaceR.setTextureSize(16, 16);
		fFaceR.mirror = true;
		setRotation(fFaceR, -2.356194F, -1.570796F, 0F);
		fFaceU = new ModelRenderer(this, 0, 0);
		fFaceU.addBox(0F, 0F, 0F, 6, 3, 0);
		fFaceU.setRotationPoint(2F, 16F, -8F);
		fFaceU.setTextureSize(16, 16);
		fFaceU.mirror = true;
		setRotation(fFaceU, 2.356194F, -1.570796F, 0F);
		fFaceD = new ModelRenderer(this, 0, 0);
		fFaceD.addBox(0F, 0F, 0F, 6, 3, 0);
		fFaceD.setRotationPoint(-2F, 16F, -8F);
		fFaceD.setTextureSize(16, 16);
		fFaceD.mirror = true;
		setRotation(fFaceD, -0.7853982F, -1.570796F, 0F);
		fFaceL = new ModelRenderer(this, 0, 0);
		fFaceL.addBox(0F, 0F, 0F, 6, 3, 0);
		fFaceL.setRotationPoint(2F, 16F, -8F);
		fFaceL.setTextureSize(16, 16);
		fFaceL.mirror = true;
		setRotation(fFaceL, 0.7853982F, -1.570796F, 0F);
		fcoreL = new ModelRenderer(this, 0, 6);
		fcoreL.addBox(0F, 0F, 0F, 6, 2, 0);
		fcoreL.setRotationPoint(-1F, 16F, -2F);
		fcoreL.setTextureSize(16, 16);
		fcoreL.mirror = true;
		setRotation(fcoreL, 1.570796F, 1.570796F, 0F);
		fcoreR = new ModelRenderer(this, 0, 6);
		fcoreR.addBox(0F, 0F, 0F, 6, 2, 0);
		fcoreR.setRotationPoint(0F, 15F, -2F);
		fcoreR.setTextureSize(16, 16);
		fcoreR.mirror = true;
		setRotation(fcoreR, 0F, 1.570796F, 0F);
		lFaceB = new ModelRenderer(this, 0, 0);
		lFaceB.addBox(0F, 0F, 0F, 6, 3, 0);
		lFaceB.setRotationPoint(2F, 16F, 2F);
		lFaceB.setTextureSize(16, 16);
		lFaceB.mirror = true;
		setRotation(lFaceB, -2.356194F, 0F, 0F);
		lFaceU = new ModelRenderer(this, 0, 0);
		lFaceU.addBox(0F, 0F, 0F, 6, 3, 0);
		lFaceU.setRotationPoint(2F, 16F, -2F);
		lFaceU.setTextureSize(16, 16);
		lFaceU.mirror = true;
		setRotation(lFaceU, 2.356194F, 0F, 0F);
		lFaceD = new ModelRenderer(this, 0, 0);
		lFaceD.addBox(0F, 0F, 0F, 6, 3, 0);
		lFaceD.setRotationPoint(2F, 16F, 2F);
		lFaceD.setTextureSize(16, 16);
		lFaceD.mirror = true;
		setRotation(lFaceD, -0.7853982F, 0F, 0F);
		lFaceF = new ModelRenderer(this, 0, 0);
		lFaceF.addBox(0F, 0F, 0F, 6, 3, 0);
		lFaceF.setRotationPoint(2F, 16F, -2F);
		lFaceF.setTextureSize(16, 16);
		lFaceF.mirror = true;
		setRotation(lFaceF, 0.7853982F, -0.0069813F, 0F);
		lcoreL = new ModelRenderer(this, 0, 6);
		lcoreL.addBox(0F, 0F, 0F, 6, 2, 0);
		lcoreL.setRotationPoint(2F, 16F, -1F);
		lcoreL.setTextureSize(16, 16);
		lcoreL.mirror = true;
		setRotation(lcoreL, 1.570796F, 0F, 0F);
		lcoreR = new ModelRenderer(this, 0, 6);
		lcoreR.addBox(0F, 0F, 0F, 6, 2, 0);
		lcoreR.setRotationPoint(2F, 15F, 0F);
		lcoreR.setTextureSize(16, 16);
		lcoreR.mirror = true;
		setRotation(lcoreR, 0F, 0F, 0F);
		rFaceB = new ModelRenderer(this, 0, 0);
		rFaceB.addBox(0F, 0F, 0F, 6, 3, 0);
		rFaceB.setRotationPoint(-8F, 16F, 2F);
		rFaceB.setTextureSize(16, 16);
		rFaceB.mirror = true;
		setRotation(rFaceB, -0.7853982F, 0F, 0F);
		rFaceU = new ModelRenderer(this, 0, 0);
		rFaceU.addBox(0F, 0F, 0F, 6, 3, 0);
		rFaceU.setRotationPoint(-8F, 14F, 0F);
		rFaceU.setTextureSize(16, 16);
		rFaceU.mirror = true;
		setRotation(rFaceU, 0.7853982F, 0F, 0F);
		rFaceD = new ModelRenderer(this, 0, 0);
		rFaceD.addBox(0F, 0F, 0F, 6, 3, 0);
		rFaceD.setRotationPoint(-8F, 18F, 0F);
		rFaceD.setTextureSize(16, 16);
		rFaceD.mirror = true;
		setRotation(rFaceD, -2.356194F, 0F, 0F);
		rFaceF = new ModelRenderer(this, 0, 0);
		rFaceF.addBox(0F, 0F, 0F, 6, 3, 0);
		rFaceF.setRotationPoint(-8F, 14F, 0F);
		rFaceF.setTextureSize(16, 16);
		rFaceF.mirror = true;
		setRotation(rFaceF, -0.7853982F, 0F, 0F);
		rcoreL = new ModelRenderer(this, 0, 6);
		rcoreL.addBox(0F, 0F, 0F, 6, 2, 0);
		rcoreL.setRotationPoint(-8F, 16F, -1F);
		rcoreL.setTextureSize(16, 16);
		rcoreL.mirror = true;
		setRotation(rcoreL, 1.570796F, 0F, 0F);
		rcoreR = new ModelRenderer(this, 0, 6);
		rcoreR.addBox(0F, 0F, 0F, 6, 2, 0);
		rcoreR.setRotationPoint(-8F, 15F, 0F);
		rcoreR.setTextureSize(16, 16);
		rcoreR.mirror = true;
		setRotation(rcoreR, 0F, 0F, 0F);
		coreR = new ModelRenderer(this, 0, 12);
		coreR.addBox(0F, 0F, 0F, 4, 4, 0);
		coreR.setRotationPoint(-2F, 14F, 2F);
		coreR.setTextureSize(16, 16);
		coreR.mirror = true;
		setRotation(coreR, 0F, 1.570796F, 0F);
		coreF = new ModelRenderer(this, 0, 12);
		coreF.addBox(0F, 0F, 0F, 4, 4, 0);
		coreF.setRotationPoint(-2F, 14F, -2F);
		coreF.setTextureSize(16, 16);
		coreF.mirror = true;
		setRotation(coreF, 0F, 0F, 0F);
		coreL = new ModelRenderer(this, 0, 12);
		coreL.addBox(0F, 0F, 0F, 4, 4, 0);
		coreL.setRotationPoint(2F, 14F, -2F);
		coreL.setTextureSize(16, 16);
		coreL.mirror = true;
		setRotation(coreL, 0F, -1.570796F, 0F);
		coreD = new ModelRenderer(this, 0, 12);
		coreD.addBox(0F, 0F, 0F, 4, 4, 0);
		coreD.setRotationPoint(2F, 18F, 2F);
		coreD.setTextureSize(16, 16);
		coreD.mirror = true;
		setRotation(coreD, 1.570796F, -3.141593F, 0F);
		coreB = new ModelRenderer(this, 0, 12);
		coreB.addBox(0F, 0F, 0F, 4, 4, 0);
		coreB.setRotationPoint(2F, 14F, 2F);
		coreB.setTextureSize(16, 16);
		coreB.mirror = true;
		setRotation(coreB, 0F, -3.141593F, 0F);
		coreU = new ModelRenderer(this, 0, 12);
		coreU.addBox(0F, 0F, 0F, 4, 4, 0);
		coreU.setRotationPoint(2F, 14F, -2F);
		coreU.setTextureSize(16, 16);
		coreU.mirror = true;
		setRotation(coreU, -1.570796F, 3.141593F, 0F);

		dFaceB = new ModelRenderer(this, 0, 0);
		dFaceB.addBox(0F, 0F, 0F, 6, 3, 0);
		dFaceB.setRotationPoint(2F, 18F, 0F);
		dFaceB.setTextureSize(16, 16);
		dFaceB.mirror = true;
		setRotation(dFaceB, 0.7853982F, 0F, 1.570796F);

		dFaceL = new ModelRenderer(this, 0, 0);
		dFaceL.addBox(0F, 0F, 0F, 6, 3, 0);
		dFaceL.setRotationPoint(0F, 18F, -2F);
		dFaceL.setTextureSize(16, 16);
		dFaceL.mirror = true;
		setRotation(dFaceL, 2.356194F, 0F, 1.570796F);
		dFaceR = new ModelRenderer(this, 0, 0);
		dFaceR.addBox(0F, 0F, 0F, 6, 3, 0);
		dFaceR.setRotationPoint(-2F, 18F, 0F);
		dFaceR.setTextureSize(16, 16);
		dFaceR.mirror = true;
		setRotation(dFaceR, 2.356194F, 0F, 1.570796F);
		dFaceF = new ModelRenderer(this, 0, 0);
		dFaceF.addBox(0F, 0F, 0F, 6, 3, 0);
		dFaceF.setRotationPoint(0F, 18F, -2F);
		dFaceF.setTextureSize(16, 16);
		dFaceF.mirror = true;
		setRotation(dFaceF, 0.7853982F, 0F, 1.570796F);
		dcoreL = new ModelRenderer(this, 0, 6);
		dcoreL.addBox(0F, 0F, 0F, 6, 2, 0);
		dcoreL.setRotationPoint(0F, 18F, -1F);
		dcoreL.setTextureSize(16, 16);
		dcoreL.mirror = true;
		setRotation(dcoreL, 1.570796F, 0F, 1.570796F);
		dcoreR = new ModelRenderer(this, 0, 6);
		dcoreR.addBox(0F, 0F, 0F, 6, 2, 0);
		dcoreR.setRotationPoint(1F, 18F, 0F);
		dcoreR.setTextureSize(16, 16);
		dcoreR.mirror = true;
		setRotation(dcoreR, 0F, 0F, 1.570796F);
		uFaceB = new ModelRenderer(this, 0, 0);
		uFaceB.addBox(0F, 0F, 0F, 6, 3, 0);
		uFaceB.setRotationPoint(2F, 8F, 0F);
		uFaceB.setTextureSize(16, 16);
		uFaceB.mirror = true;
		setRotation(uFaceB, 0.7853982F, 0F, 1.570796F);
		uFaceL = new ModelRenderer(this, 0, 0);
		uFaceL.addBox(0F, 0F, 0F, 6, 3, 0);
		uFaceL.setRotationPoint(0F, 8F, -2F);
		uFaceL.setTextureSize(16, 16);
		uFaceL.mirror = true;
		setRotation(uFaceL, 2.356194F, 0F, 1.570796F);
		uFaceR = new ModelRenderer(this, 0, 0);
		uFaceR.addBox(0F, 0F, 0F, 6, 3, 0);
		uFaceR.setRotationPoint(-2F, 8F, 0F);
		uFaceR.setTextureSize(16, 16);
		uFaceR.mirror = true;
		setRotation(uFaceR, 2.356194F, 0F, 1.570796F);
		uFaceF = new ModelRenderer(this, 0, 0);
		uFaceF.addBox(0F, 0F, 0F, 6, 3, 0);
		uFaceF.setRotationPoint(0F, 8F, -2F);
		uFaceF.setTextureSize(16, 16);
		uFaceF.mirror = true;
		setRotation(uFaceF, 0.7853982F, 0F, 1.570796F);
		ucoreL = new ModelRenderer(this, 0, 6);
		ucoreL.addBox(0F, 0F, 0F, 6, 2, 0);
		ucoreL.setRotationPoint(0F, 8F, -1F);
		ucoreL.setTextureSize(16, 16);
		ucoreL.mirror = true;
		setRotation(ucoreL, 1.570796F, 0F, 1.570796F);
		ucoreR = new ModelRenderer(this, 0, 6);
		ucoreR.addBox(0F, 0F, 0F, 6, 2, 0);
		ucoreR.setRotationPoint(1F, 8F, 0F);
		ucoreR.setTextureSize(16, 16);
		ucoreR.mirror = true;
		setRotation(ucoreR, 0F, 0F, 1.570796F);
		bFaceR = new ModelRenderer(this, 0, 0);
		bFaceR.addBox(0F, 0F, 0F, 6, 3, 0);
		bFaceR.setRotationPoint(-2F, 16F, 2F);
		bFaceR.setTextureSize(16, 16);
		bFaceR.mirror = true;
		setRotation(bFaceR, -2.356194F, -1.570796F, 0F);
		bFaceU = new ModelRenderer(this, 0, 0);
		bFaceU.addBox(0F, 0F, 0F, 6, 3, 0);
		bFaceU.setRotationPoint(2F, 16F, 2F);
		bFaceU.setTextureSize(16, 16);
		bFaceU.mirror = true;
		setRotation(bFaceU, 2.356194F, -1.570796F, 0F);
		bFaceD = new ModelRenderer(this, 0, 0);
		bFaceD.addBox(0F, 0F, 0F, 6, 3, 0);
		bFaceD.setRotationPoint(-2F, 16F, 2F);
		bFaceD.setTextureSize(16, 16);
		bFaceD.mirror = true;
		setRotation(bFaceD, -0.7853982F, -1.570796F, 0F);
		bFaceL = new ModelRenderer(this, 0, 0);
		bFaceL.addBox(0F, 0F, 0F, 6, 3, 0);
		bFaceL.setRotationPoint(2F, 16F, 2F);
		bFaceL.setTextureSize(16, 16);
		bFaceL.mirror = true;
		setRotation(bFaceL, 0.7853982F, -1.570796F, 0F);
		bcoreL = new ModelRenderer(this, 0, 6);
		bcoreL.addBox(0F, 0F, 0F, 6, 2, 0);
		bcoreL.setRotationPoint(-1F, 16F, 8F);
		bcoreL.setTextureSize(16, 16);
		bcoreL.mirror = true;
		setRotation(bcoreL, 1.570796F, 1.570796F, 0F);
		bcoreR = new ModelRenderer(this, 0, 6);
		bcoreR.addBox(0F, 0F, 0F, 6, 2, 0);
		bcoreR.setRotationPoint(0F, 15F, 8F);
		bcoreR.setTextureSize(16, 16);
		bcoreR.mirror = true;
		setRotation(bcoreR, 0F, 1.570796F, 0F);
	}

	public void render(TileEntity entity, float f, float f1, float f2, float f3, float f4, float f5)
	{
		boolean[] connections = {false, false, false, false, false, false};
		if (entity instanceof TileEntityFluxCable)
			connections= ((TileEntityFluxCable)entity).connections;
		super.render((Entity)null, f, f1, f2, f3, f4, f5);
		setRotationAngles(f, f1, f2, f3, f4, f5, (Entity)null);
		if (connections[3]){
			fFaceR.render(f5);
			fFaceU.render(f5);
			fFaceD.render(f5);
			fFaceL.render(f5);
			fcoreL.render(f5);
			fcoreR.render(f5);
		}
		if (connections[5]){
			lFaceB.render(f5);
			lFaceU.render(f5);
			lFaceD.render(f5);
			lFaceF.render(f5);
			lcoreL.render(f5);
			lcoreR.render(f5);
		}
		if (connections[4]){
			rFaceB.render(f5);
			rFaceU.render(f5);
			rFaceD.render(f5);
			rFaceF.render(f5);
			rcoreL.render(f5);
			rcoreR.render(f5);
		}

		coreR.render(f5);
		coreF.render(f5);
		coreL.render(f5);
		coreD.render(f5);
		coreB.render(f5);
		coreU.render(f5);

		if (connections[1]){
			dFaceB.render(f5);
			dFaceL.render(f5);
			dFaceR.render(f5);
			dFaceF.render(f5);
			dcoreL.render(f5);
			dcoreR.render(f5);
		}
		if (connections[0]){
			uFaceB.render(f5);
			uFaceL.render(f5);
			uFaceR.render(f5);
			uFaceF.render(f5);
			ucoreL.render(f5);
			ucoreR.render(f5);
		}
		if (connections[2]){
			bFaceR.render(f5);
			bFaceU.render(f5);
			bFaceD.render(f5);
			bFaceL.render(f5);
			bcoreL.render(f5);
			bcoreR.render(f5);
		}
	}

	private void setRotation(ModelRenderer model, float x, float y, float z)
	{
		model.rotateAngleX = x;
		model.rotateAngleY = y;
		model.rotateAngleZ = z;
	}

	public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5, Entity entity){
		super.setRotationAngles(f, f1, f2, f3, f4, f5, entity);
	}

}
